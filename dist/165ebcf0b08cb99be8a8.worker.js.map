{"version":3,"sources":["webpack://pocketsphinx-web/webpack/bootstrap","webpack://pocketsphinx-web/./src/worker/recognizer.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","e","a","t","onMessage","event","data","command","clbId","output","config","Module","Config","buffer","AudioBuffer","length","pop","push_back","post","status","code","recognizer","reInit","ReturnType","SUCCESS","Recognizer","segmentation","Segmentation","RUNTIME_ERROR","id","delete","callbackId","importScripts","apply","this","words","VectorWords","w","addWords","numStates","transitions","VectorTransitions","word","logp","id_v","Integers","addGrammar","start","end","addKeyword","switchSearch","parseInt","stop","getHypseg","hyp","getHyp","hypseg","final","array","size","set","process","self","onmessage","pocketsphinxJS","postMessage","message"],"mappings":"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","file":"165ebcf0b08cb99be8a8.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global importScripts, Module */\n'use strict';\nfunction startup(onMessage) {\n    self.onmessage = function(event) {\n        const pocketsphinxJS = (event.data && event.data.length && (event.data.length > 0)) ? event.data : './pocketsphinx.js';\n        importScripts(pocketsphinxJS);\n        self.onmessage = onMessage;\n        self.postMessage({});\n    };\n}\n\nstartup(function(event) {\n  /* jshint indent:false */\n  switch(event.data.command){\n    case 'initialize':\n      initialize(event.data.data, event.data.callbackId);\n      break;\n    case 'load':\n      load(event.data.data, event.data.callbackId);\n      break;\n    case 'addWords':\n      addWords(event.data.data, event.data.callbackId);\n      break;\n    case 'addGrammar':\n      addGrammar(event.data.data, event.data.callbackId);\n      break;\n    case 'addKeyword':\n      addKeyword(event.data.data, event.data.callbackId);\n      break;\n    case 'start':\n      start(event.data.data);\n      break;\n    case 'stop':\n      stop();\n      break;\n    case 'process':\n      process(event.data.data);\n      break;\n    case 'proccessBufer':\n      processBuffer(event.data.data, event.data.buffer)\n      break;\n    }\n});\n\nvar post = function(message) {\n  self.postMessage(message);\n};\n\nvar recognizer;\nvar buffer;\nvar segmentation;\n\nfunction initialize(data, clbId) {\n  var config = new Module.Config();\n  buffer = new Module.AudioBuffer();\n\n  if (data) {\n    while (data.length > 0) {\n      var p = data.pop();\n      if (p.length === 2) {\n        config.push_back([p[0],p[1]]);\n      } else {\n        post({status: 'error', command: 'initialize', code: 'js-data'});\n      }\n    }\n  }\n  var output;\n\n  if(recognizer) {\n    output = recognizer.reInit(config);\n    if (output !== Module.ReturnType.SUCCESS){ post({status: 'error', command: 'initialize', code: output}); }\n  } else {\n    recognizer = new Module.Recognizer(config);\n    segmentation = new Module.Segmentation();\n\n    if (recognizer === undefined){\n      post({status: 'error', command: 'initialize', code: Module.ReturnType.RUNTIME_ERROR});\n    } else {\n      post({status: 'done', command: 'initialize', id: clbId});\n    }\n  }\n  config.delete();\n}\n\nfunction load(data, clbId) {\n  try {\n    importScripts.apply(this, data);\n    post({status: 'done', command: 'load', id: clbId});\n  } catch(e) {\n    post({status: 'error', command: 'load', code: 'NETWORK_ERROR'});\n  }\n}\n\nfunction addWords(data, clbId) {\n  if (recognizer) {\n    var words = new Module.VectorWords();\n    for (var i = 0 ; i < data.length ; i++) {\n      var w = data[i];\n      if (w.length === 2){ words.push_back([w[0], w[1]]); }\n    }\n    var output = recognizer.addWords(words);\n    if (output !== Module.ReturnType.SUCCESS) {\n      post({status: 'error', command: 'addWords', code: output});\n    } else {\n      post({id: clbId});\n    }\n    words.delete();\n  } else {\n    post({status: 'error', command: 'addWords', code: 'js-no-recognizer'});\n  }\n}\n\nfunction addGrammar(data, clbId) {\n  var output;\n  if (recognizer) {\n    if (data.hasOwnProperty('numStates') && data.numStates > 0 &&\n        data.hasOwnProperty('start') &&\n        data.hasOwnProperty('end') &&\n        data.hasOwnProperty('transitions') && data.transitions.length > 0) {\n\n      var transitions = new Module.VectorTransitions();\n      while (data.transitions.length > 0) {\n        var t = data.transitions.pop();\n        if (t.hasOwnProperty('from') && t.hasOwnProperty('to')) {\n          if (!t.hasOwnProperty('word')){ t.word = ''; }\n          if (!t.hasOwnProperty('logp')){ t.logp = 0; }\n          transitions.push_back(t);\n        }\n      }\n      var id_v = new Module.Integers();\n      output = recognizer.addGrammar(id_v, {start: data.start, end: data.end, numStates: data.numStates, transitions: transitions});\n      if (output !== Module.ReturnType.SUCCESS){\n        post({status: 'error', command: 'addGrammar', code: output});\n      } else {\n        post({id: clbId, data: id_v.get(0), status: 'done', command: 'addGrammar'});\n      }\n\n      transitions.delete();\n      id_v.delete();\n    } else {\n      post({status: 'error', command: 'addGrammar', code: 'js-data'});\n    }\n  } else {\n    post({status: 'error', command: 'addGrammar', code: 'js-no-recognizer'});\n  }\n}\n\nfunction addKeyword(data, clbId) {\n  var output;\n  if (recognizer) {\n    if (data.length > 0) {\n      var id_v = new Module.Integers();\n      output = recognizer.addKeyword(id_v, data);\n      if (output !== Module.ReturnType.SUCCESS){\n        post({status: 'error', command: 'addKeyword', code: output});\n      } else {\n        post({id: clbId, data: id_v.get(0), status: 'done', command: 'addKeyword'});\n      }\n      id_v.delete();\n    } else {\n      post({status: 'error', command: 'addKeyword', code: 'js-data'});\n    }\n  } else {\n    post({status: 'error', command: 'addKeyword', code: 'js-no-recognizer'});\n  }\n}\n\nfunction start(id) {\n  if (recognizer) {\n    var output;\n    if (id) {\n      output = recognizer.switchSearch(parseInt(id, 10));\n      if (output !== Module.ReturnType.SUCCESS) {\n        post({status: 'error', command: 'switchgrammar', code: output});\n        return;\n      }\n    }\n    output = recognizer.start();\n    if (output !== Module.ReturnType.SUCCESS) {\n      post({status: 'error', command: 'start', code: output});\n    }\n  } else {\n    post({status: 'error', command: 'start', code: 'js-no-recognizer'});\n  }\n}\n\nfunction stop() {\n  if (recognizer) {\n    var output = recognizer.stop();\n    if (output !== Module.ReturnType.SUCCESS){\n      post({status: 'error', command: 'stop', code: output});\n    } else {\n      recognizer.getHypseg(segmentation);\n      post({\n        hyp: recognizer.getHyp(),\n        hypseg: segmentation,\n        'final': true\n      });\n    }\n  } else {\n    post({status: 'error', command: 'stop', code: 'js-no-recognizer'});\n  }\n}\n\nfunction process(array) {\n  if (recognizer) {\n    while (buffer.size() < array.length){\n      buffer.push_back(0);\n    }\n    for (var i = 0 ; i < array.length ; i++){\n      buffer.set(i, array[i]);\n    }\n    var output = recognizer.process(buffer);\n    if (output !== Module.ReturnType.SUCCESS){\n      post({status: 'error', command: 'process', code: output});\n    } else {\n      recognizer.getHypseg(segmentation);\n      post({\n        hyp: recognizer.getHyp(),\n        hypseg: segmentation\n      });\n    }\n  } else {\n    post({status: 'error', command: 'process', code: 'js-no-recognizer'});\n  }\n}\nfunction processBuffer(array, buffer) {\n  if (recognizer) {\n    while (buffer.size() < array.length){\n      buffer.push_back(0);\n    }\n    for (var i = 0 ; i < array.length ; i++){\n      buffer.set(i, array[i]);\n    }\n    var output = recognizer.process(buffer);\n    if (output !== Module.ReturnType.SUCCESS){\n      post({status: 'error', command: 'process', code: output});\n    } else {\n      recognizer.getHypseg(segmentation);\n      post({\n        hyp: recognizer.getHyp(),\n        hypseg: segmentation\n      });\n    }\n  } else {\n    post({status: 'error', command: 'process', code: 'js-no-recognizer'});\n  }\n}\n\n"],"sourceRoot":""}